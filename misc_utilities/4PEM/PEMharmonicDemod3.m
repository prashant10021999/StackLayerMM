function [freq,phase,bessel,mag,phase2,M] = PEMharmonicDemod3(f,p,A,I,t)
% Simple harmonic demodulation of a 4PEM waveform. No window function is
% applied and J0(A1) = J0(A4) = 0 is assmed;
I = BlackmanNuttall(length(I)).'.*I;
basis =...  % basis harmonics. 9 means not a member of the set.
[-1  1  9  9 ;...
  2  9  9  9 ;...
  1  0  9  9 ;...
  9  9  1 -1 ;...
  1  1 -1 -1 ;...
 -2  9  1  1 ;...
 -1  0  1  1 ;...
  9  9  9  2 ;...
  1  1  9 -2 ;...
  2  9  9 -2 ;...
 -1  0  9  2 ;...
  9  9  0 -1 ;...
 -1  1  0  1 ;...
  2  9  0 -1 ;...
  1  0  0 -1 ];
bessel = ones(15,4);
for i = 1:15  % get the bessel coef.
    for j=1:4
        if basis(i,j) ~= 9; bessel(i,j) = besselj(abs(basis(i,j)),A(j)); end
    end
end
bessel = prod(bessel,2); 
basis(basis==9)=0; %replace the 9's in the basis with zeros.
freq = basis*f.'; % compute frequencies of the harmonics.
phase = (basis*p.') - sum(rem(basis,2),2)*pi/2; % compute phase offsets of the harmonics
C = exp(1i*2*pi*freq*t.')*I; % compute the 15 harmonic amplitudes
[phase2,mag] = cart2pol(real(C),imag(C)); % convert them to polar form
DC = sum(I); % zero-frequency term
M = mag.*sign(cos(phase + phase2))./bessel; % divide out Fourier coef. and apply correct sign
M = reshape([DC ; M],[4,4]).'./length(t)./0.3635819;  % add M11, and reshape into a matrix
M([2,3],:) = -M([2,3],:);  %change signs of second row and column in accordance with instrument config
end