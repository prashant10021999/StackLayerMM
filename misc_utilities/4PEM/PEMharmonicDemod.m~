function [freq,phase,bessel,mag,phase2,M] = PEMharmonicDemod(f,p,A,I,t)
basis =...  % basis harmonics. 9 means not a member of that 
[ 1 -1  9  9 ;...
  2  9  9  9 ;...
  1 -2  9  9 ;...
  9  9  1 -1 ;...
  1 -1 -1  1 ;...
 -2  9  1  1 ;...
  1 -2 -1  1 ;...
  9  9  9  2 ;...
  1  1  9 -2 ;...
  2  9  9 -2 ;...
  1  2  9 -2 ;...
  9  9  2 -1 ;...
  1 -1  2 -1 ;...
  2  9 -2  1 ;...
 -1  2 -2  1 ];
bessel = ones(15,4);
for i = 1:15
    for j=1:4
        if basis(i,j) ~= 9; bessel(i,j) = besselj(abs(basis(i,j)),A(j)); end
    end
end
bessel = prod(bessel,2);
basis(basis==9)=0;
freq = basis*f.'; % frequencies of the harmonics.
phase = (basis*p.') - sum(rem(basis,2),2)*pi/2; % phase offsets of the harmonics
C = exp(1i*2*pi*freq*t.')*I; % compute the 15 harmonic amplitudes
[phase2,mag] = cart2pol(real(C),imag(C)); % convert them to polar form
DC = sum(I); % zero-frequency term
M = mag.*sign(cos(phase + phase2))./(2*bessel); % divide out Fourier coef. and apply correct sign
M = 2*reshape([DC/2 ; M],[4,4])./length(t);  % add M11, and reshape into a matrix
M = M.';  % transpose because reshape() operates on columns not rows
M([2,3],:) = -M([2,3],:);  %change signs of second row and column in accordance with instrument config